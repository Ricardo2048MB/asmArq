.MODEL SMALL
.STACK
.DATA
; VECTOR DB 10H, 11H, 12H, 13H, 14H, 15H, 16H, 17H
;			       DB 18H, 19H, 1AH, 1BH, 1CH, 1DH, 1EH, 1FH
VECTOR DB 16 DUP (10H)
	DB 16 DUP (11H)
	DB 16 DUP (12H)
	DB 16 DUP (13H)
	DB 16 DUP (14H)
	DB 16 DUP (15H)
	DB 16 DUP (16H)
	DB 16 DUP (17H)
	DB 16 DUP (18H) 
	DB 16 DUP (19H)
	DB 16 DUP (1AH)
	DB 16 DUP (1BH)
	DB 16 DUP (1CH)
	DB 16 DUP (1DH)
	DB 16 DUP (1EH)
	DB 16 DUP (1FH)
.CODE
EXTRN DALE_ENTER: PROC;CARRIAGE RETURN, LINE FEED (RETORNO DE CARRO, DALTO DE LINEA) [ES DALE_ENTER]
EXTRN IMPRIME_HEXADECIMAL: PROC
EXTRN ESCRIBE_CARACTER: PROC
PUBLIC DISP_MEDIO_SECTOR
DISP_MEDIO_SECTOR PROC
	MOV AX, @DATA
	MOV DS, AX
	XOR DX, DX
	MOV CX, 16
MEDIO_SECTOR:
	CALL MUESTRA_LINEA
	CALL DALE_ENTER
	ADD DX, 16
	LOOP MEDIO_SECTOR
DISP_MEDIO_SECTOR ENDP
.EXIT
PUBLIC MUESTRA_LINEA
MUESTRA_LINEA PROC
	;MOV AX, @DATA
	;MOV DS, AX
	;POR ACA EMPIEZA LA HOJA 2
	;XOR BX, BX
	PUSH BX
	PUSH CX
	PUSH DX
	MOV BX, DX
	MOV CX, 16
	PUSH BX
CICLO_HEXA:
	MOV DL, VECTOR [BX]
	CALL IMPRIME_HEXADECIMAL
	MOV DL, ' '
	CALL ESCRIBE_CARACTER
	INC BX
	LOOP CICLO_HEXA
	MOV DL, ' '
	CALL ESCRIBE_CARACTER
	MOV CX, 16
	POP BX
	;XOR BX, BX 	
CICLO_ASCII:
	MOV DL, VECTOR [BX]
	CALL ESCRIBE_CARACTER
	INC BX
	LOOP CICLO_ASCII
	POP DX
	POP CX
	POP BX
	RET
	; .EXIT 
MUESTRA_LINEA ENDP
;END DISP_MEDIO_SECTOR CREO QUE ESTO SOBRA
END
