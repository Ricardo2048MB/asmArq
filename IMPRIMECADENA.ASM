.MODEL SMALL
.DATA
.STACK ;EESTA SECCIOON DEFINE EL ESPACIO DE PILA PARA QUE NO HAYA OVERFLOW
	MENSAJE DB "INGRESA UN CARACTER:","$" ;AL PARECER LA COMA CONCATENA EL SIGNO DE PESOS CON EL RESTO
.CODE
	COMMENT !

		CON LAS PRIMERAS DOS LIINEAS SE CARGAN LAS VARIABLES

		EESTO SE HACE EN DOS LIINEAS PORQUE NO SE PUEDE MOVER @DATA DIRECTAMENTE A DS Y ES,
		YA QUE LA INSTRUCCIOON MOV NO PERMITE MOVER UNA CONSTANTE DIRECTAMENTE A UN REGISTRO DE SEGMENTO.
		
		AUNQUE _MENSAJE_ NO ESTEE DEFINIDO DEBAJO DE .DATA, @DATA PUEDE HACER REFERENCIA A LA CADENA.
		LO USUAL ES QUE LOS DATOS SE DEFINAN EN .DATA, PERO TAMBIÃ‰N SE PUEDEN DEFINIR EN OTRAS SECCIONES.

	!
	MOV AX, @DATA ;
	MOV DS, AX ;DS DEBE APUNTAR A UNA CADENA QUE TERMINE EN $ PARA EL SERVICIO 09
	COMMENT !
		DESPUEES SIGUE LA LOOGICA DEL PROGRAMA
	!
	MOV AH, 09 ;SERVICIO 09: IMPRIMIR UNA CADENA QUE TERMINE EN $
	LEA DX, MENSAJE ;LOAD EFFECTIVE ADDRESS _MENSAJE_ (QUE ES LO QUE VA EN DX)
	COMMENT !
	
		NO SE PUEDE CARGAR LA CADENA MENSAJE DE OTRO MODO PORQUE LA INSTRUCCIOON MOV NO PUEDE MOVER DIRECCIONES, 
		SOOLO PUEDE MOVER DATOS ENTRE REGISTROS.
	!
	INT 21H
	MOV AH, 01 ;SERVICIO 01 DE ENTRADA DE TECLADO (EL CARACTER TECLEADO HACE ECO EN LA PANTALLA)
	INT 21H
	;LO QUE SEA QUE SE HAYA TECLEADO SE GUARDA EN AL
	MOV DL, AL ;Y ESO DEBE GUARDARSE EN DL PARA QUE SEA USADO POR EL SERVICIO 02
	MOV CX, 0FH ;CON EESTA LIINEA HAGO QUE SE TENGAN QUE IMPRIMIR LOS N SIGUIENTES CARACTERES (15 EN ESTE CASO)
	MOV AH, 02 ;EL SERVICIO 02 IMPRIME EN LA PANTALLA LO QUE ESTEE EN DL
SUBEARRIBA: ; A PARTIR DE AQUII EL PROGRAMA ES IDEENTICO AL QUE IMPRIMIIA EL ABECEDARIO
	INT 21H
	INC DL ;EESTO VA A HACER QUE SE IMPRIMA EL SIGUIENTE CARACTER
	LOOP SUBEARRIBA ;SE EJECUTA EL CICLO 0FH VECES O SEA 15 VECES
	COMMENT !
		RICARDO MUNIOZ BOLANIOS
	!
	.EXIT
END