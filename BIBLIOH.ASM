.MODEL SMALL
.CODE

PUBLIC IMPRIME_DECIMAL
IMPRIME_DECIMAL PROC
	PUSH AX
	PUSH CX
	PUSH DX
	PUSH SI
	MOV AX, DX
	MOV SI, 10
	XOR CX, CX
NO_ES_CERO:
	XOR DX, DX
	DIV SI
	PUSH DX
	INC CX
	OR AX, AX
	JNZ NO_ES_CERO
CICLO_ESCRIBE_DIGITO:
	POP DX
	CALL ESCRIBE_DIGITO_HEXA
	LOOP CICLO_ESCRIBE_DIGITO
;END_DECIMAL:
	POP SI
	POP DX
	POP CX
	POP AX
	RET
IMPRIME_DECIMAL ENDP

PUBLIC IMPRIME_HEXADECIMAL
IMPRIME_HEXADECIMAL PROC
	PUSH AX
	PUSH CX
	PUSH DX
	PUSH SI
	MOV AX, DX
	MOV SI, 16
	XOR CX, CX
NO_ES_CERO:
	XOR DX, DX
	DIV SI
	PUSH DX
	INC CX
	OR AX, AX
	JNZ NO_ES_CERO
CICLO_ESCRIBE_DIGITO:
	POP DX
	CALL ESCRIBE_DIGITO_HEXA
	LOOP CICLO_ESCRIBE_DIGITO
;END_DECIMAL:
	POP SI
	POP DX
	POP CX
	POP AX
	RET
IMPRIME_HEXADECIMAL ENDP

PUBLIC ESCRIBE_DIGITO_HEXA
ESCRIBE_DIGITO_HEXA PROC
	PUSH DX
	
	CMP DL, 10
	JAE LETRA_HEXA
	ADD DL, "0"
	JMP SHORT ESCRIBE_DIGITO
	LETRA_HEXA:
	ADD DL, "A"-10
	ESCRIBE_DIGITO:
	CALL ESCRIBE_CARACTER
	
	POP DX
	RET
ESCRIBE_DIGITO_HEXA ENDP

PUBLIC ESCRIBE_CARACTER
ESCRIBE_CARACTER PROC
	PUSH AX
	MOV AH, 02
	INT 21H
	POP AX
	RET
ESCRIBE_CARACTER ENDP

END