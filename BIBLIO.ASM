.MODEL SMALL
.CODE
PUBLIC IMPRIME_DECIMAL
IMPRIME_DECIMAL PROC
	PUSH AX
	PUSH CX
	PUSH DX
	PUSH SI
	MOV AX, DX
	MOV SI, 10
	XOR CX, CX
NO_ES_CERO:
	XOR DX, DX
	DIV SI
	PUSH DX
	INC CX
	OR AX, AX
	JNZ NO_ES_CERO
CICLO_ESCRIBE_DIGITO:
	POP DX
	CALL ESCRIBE_DIGITO_HEXA
	LOOP CICLO_ESCRIBE_DIGITO
;END_DECIMAL:
	POP SI
	POP DX
	POP CX
	POP AX
	RET
IMPRIME_DECIMAL ENDP
PUBLIC IMPRIME_HEXADECIMAL
IMPRIME_HEXADECIMAL PROC
	PUSH AX
	PUSH CX
	PUSH DX
	PUSH SI
	MOV AX, DX
	MOV SI, 16
	XOR CX, CX
NO_ES_CERO:
	XOR DX, DX
	DIV SI
	PUSH DX
	INC CX
	OR AX, AX
	JNZ NO_ES_CERO
CICLO_ESCRIBE_DIGITO:
	POP DX
	CALL ESCRIBE_DIGITO_HEXA
	LOOP CICLO_ESCRIBE_DIGITO
;END_DECIMAL:
	POP SI
	POP DX
	POP CX
	POP AX
	RET
IMPRIME_HEXADECIMAL ENDP
PUBLIC IMPRIME_BINARIO
IMPRIME_BINARIO PROC
	PUSH AX
	PUSH CX
	PUSH DX
	PUSH SI
	MOV AX, DX
	MOV SI, 2
	XOR CX, CX
NO_ES_CERO:
	XOR DX, DX
	DIV SI
	PUSH DX
	INC CX
	OR AX, AX
	JNZ NO_ES_CERO
CICLO_ESCRIBE_DIGITO:
	POP DX
	CALL ESCRIBE_DIGITO_HEXA
	LOOP CICLO_ESCRIBE_DIGITO
;END_DECIMAL:
	POP SI
	POP DX
	POP CX
	POP AX
	RET
IMPRIME_BINARIO ENDP
PUBLIC ESCRIBE_ALFAHEXA
ESCRIBE_ALFAHEXA PROC
	PUSH CX
	PUSH DX
	MOV CX, 0FH
	MOV DL, 01
	CICLO1:
	PUSH DX
	CALL ESCRIBE_DIGITO_HEXA
	MOV DL, " ";20H
	CALL ESCRIBE_CARACTER
	POP DX
	INC DL
	LOOP CICLO1
	MOV DL, " ";20H
	CALL ESCRIBE_CARACTER
	MOV CX, 0FH
	MOV DL, 01
	CICLO2:
	CALL ESCRIBE_DIGITO_HEXA
	INC DL
	LOOP CICLO2
	POP DX	
	POP CX
	RET
ESCRIBE_ALFAHEXA ENDP
PUBLIC ESCRIBE_DIGITO_HEXA
ESCRIBE_DIGITO_HEXA PROC
	PUSH DX
	CMP DL, 10
	JAE LETRA_HEXA
	ADD DL, "0"
	JMP SHORT ESCRIBE_DIGITO
	LETRA_HEXA:
	ADD DL, "A"-10
	ESCRIBE_DIGITO:
	CALL ESCRIBE_CARACTER
	POP DX
	RET
ESCRIBE_DIGITO_HEXA ENDP
PUBLIC DALE_ENTER
DALE_ENTER PROC
	PUSH DX
	MOV DL, 10
	CALL ESCRIBE_CARACTER
	MOV DL, 13
	CALL ESCRIBE_CARACTER
	POP DX
	RET
DALE_ENTER ENDP
PUBLIC ESCRIBE_CARACTER
ESCRIBE_CARACTER PROC
	PUSH AX
	MOV AH, 02
	INT 21H
	POP AX
	RET
ESCRIBE_CARACTER ENDP
PUBLIC MUESTRA_LINEA
MUESTRA_LINEA PROC
	;MOV AX, @DATA
	;MOV DS, AX
	;POR ACA EMPIEZA LA HOJA 2
	;XOR BX, BX
	PUSH BX
	PUSH CX
	PUSH DX
	MOV BX, DX
	MOV CX, 16
	PUSH BX
CICLO_HEXA:
	MOV DL, VECTOR [BX]
	CALL ESCRIBE_DIGITO_HEXA
	MOV DL, ' '
	CALL ESCRIBE_CARACTER
	INC BX
	LOOP CICLO_HEXA
	MOV DL, ' '
	CALL ESCRIBE_CARACTER
	MOV CX, 16
	POP BX
	;XOR BX, BX 	
CICLO_ASCII:
	MOV DL, VECTOR [BX]
	CALL ESCRIBE_CARACTER
	INC BX
	LOOP CICLO_ASCII
	POP DX
	POP CX
	POP BX
	RET
	; .EXIT 
MUESTRA_LINEA ENDP
;END DISP_MEDIO_SECTOR CREO QUE ESTO SOBRA
END
