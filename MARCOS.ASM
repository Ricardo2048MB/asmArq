ESQ_SUP_IZQ EQU 0C9H
ESQ_SUP_DER EQU 0BBH
ESQ_INF_IZQ EQU 0C8H
ESQ_INF_DER EQU 0BCH
BARRA_HORIZ EQU 0CDH
T_SUPERIOR EQU 0CBH
T_INFERIOR EQU 0CAH
BARRA_VERTI EQU 0BAH
.MODEL SMALL; small
.STACK
.DATA
VECTOR DB 16 DUP (10H)
	DB 16 DUP (11H)
	DB 16 DUP (12H)
	DB 16 DUP (13H)
	DB 16 DUP (14H)
	DB 16 DUP (15H)
	DB 16 DUP (16H)
	DB 16 DUP (17H)
	DB 16 DUP (18H) 
	DB 16 DUP (19H)
	DB 16 DUP (1AH)
	DB 16 DUP (1BH)
	DB 16 DUP (1CH)
	DB 16 DUP (1DH)
	DB 16 DUP (1EH)
	DB 16 DUP (1FH)
.CODE
EXTRN ESCRIBE_CARACTER: PROC
EXTRN IMPRIME_HEXADECIMAL: PROC
EXTRN DALE_ENTER:PROC
MOV AX, DGROUP
MOV DS, AX
MOV DL, ESQ_SUP_IZQ
CALL ESCRIBE_CARACTER
MOV CX, 49;20
MOV DL, BARRA_HORIZ
CICLO:
CALL ESCRIBE_CARACTER
LOOP CICLO
MOV DL, T_SUPERIOR
CALL ESCRIBE_CARACTER
MOV CX, 18;20
MOV DL, BARRA_HORIZ
CICLO2:
CALL ESCRIBE_CARACTER
LOOP CICLO2
MOV DL, ESQ_SUP_DER
CALL ESCRIBE_CARACTER
CALL DALE_ENTER
;________________________________________MEDIO SECTOR________________________________________________________
XOR DX, DX
MOV CX, 16
MEDIO_SECTOR:
CALL MUESTRA_LINEA
CALL DALE_ENTER
ADD DX, 16
LOOP MEDIO_SECTOR;____________________________________________________________________________________
MOV DL, ESQ_INF_IZQ
CALL ESCRIBE_CARACTER
MOV CX, 49;20
MOV DL, BARRA_HORIZ
CICLO3:
CALL ESCRIBE_CARACTER
LOOP CICLO3
MOV DL, T_INFERIOR
CALL ESCRIBE_CARACTER
MOV CX, 18;20
MOV DL, BARRA_HORIZ
CICLO4:
CALL ESCRIBE_CARACTER
LOOP CICLO4
MOV DL, ESQ_INF_DER
CALL ESCRIBE_CARACTER
.EXIT
PUBLIC MUESTRA_LINEA
MUESTRA_LINEA PROC
	PUSH BX
	PUSH CX
	PUSH DX
	MOV BX, DX
	MOV CX, 16
	PUSH BX; ERA NECESARIO PRESERVAR NADA EN BX?
	MOV DL, BARRA_VERTI
	CALL ESCRIBE_CARACTER
	MOV DL, " "
	CALL ESCRIBE_CARACTER
CICLO_HEXA:
	MOV DL, VECTOR [BX]
	CALL IMPRIME_HEXADECIMAL; NOS VAMOS A QUEDAR PENDIENTES ACA MAISTRO
	MOV DL, ' '; ESTE ES EL ESPACIO ENTRE CADA NUMERO HEXADECIMAL
	CALL ESCRIBE_CARACTER
	INC BX; ESTO ES LO QUE RECORRE EL INDICE DEL VECTOR
	LOOP CICLO_HEXA
	MOV DL, BARRA_VERTI; ESTE ESPACIO ESTA ENTRE LOS NUMEROS Y SUS RESPECTIVOS CODIGOS ASCII
	CALL ESCRIBE_CARACTER
	MOV CX, 16
	POP BX; SE VUELVE A PONER A CERO BX
	MOV DL, " "
	CALL ESCRIBE_CARACTER
CICLO_ASCII:; EL SEGUNDO CICLO SIMPLEMENTE ESCRIBE LOS CARACTERES ASCII CORRESPONDIENTES
	MOV DL, VECTOR [BX]
	CALL ESCRIBE_CARACTER
	INC BX
	LOOP CICLO_ASCII
	MOV DL, " "
	CALL ESCRIBE_CARACTER
	MOV DL, BARRA_VERTI
	CALL ESCRIBE_CARACTER
	POP DX
	POP CX
	POP BX
	RET
MUESTRA_LINEA ENDP
END