.MODEL SMALL
.STACK
.DATA
	
	NUMERO1 DB 0H
	NUMERO2 DB 0H
	RESULTADO DB 0H
	
	MSG_SUMA DB 10, 13, 7, "SUMA: $"
	MSG_RESTA DB 10, 13, 7, "RESTA: $"
	MSG_MULT DB 10, 13, 7, "MULTIPLICACIOON: $"
	MSG_DIV DB 10, 13, 7, "DIVISIOON: $"
	MSG_RES DB 10, 13, 7, "RESULTADO: $"
	MSG_INGNUM DB 10, 13, 7, "INGRESE UN NUUMERO: $"
	
.CODE
	;PRIMERO CARGAMOS EL OFFSET DE LOS DATOS EN DS, COMO YA SABEMOS HACERLO
	MOV AX, @DATA
	MOV DS, AX

	MOV AH, 09H
	LEA DX, MSG_INGNUM
	INT 21H

	MOV AH, 01H
	INT 21H
	SUB AL, 30H
	MOV NUMERO1, AL

	MOV AH, 09H
	LEA DX, MSG_INGNUM
	INT 21H

	MOV AH, 01H
	INT 21H
	SUB AL, 30H
	MOV NUMERO2, AL

	;CONTINUAMOS POR ACA
	;SUMA
	MOV AL, NUMERO1
	ADD AL, NUMERO2
	MOV RESULTADO, AL

	MOV AH, 09H
	LEA DX, MSG_SUMA
	INT 21H

	MOV AL, RESULTADO
	AAM; ESTO CONVIERTE A BCD LO QUE TENGA EN AL Y LO PONE EN AX, EL DIIGITO MAAS SIGNIFICATIVO EN AH Y EL OTRO EN AL
	MOV BX, AX
	MOV AH, 02H; RECORDEMOS QUE EESTE SERVICIO IMPRIME UN CARACTER CUYO COODIGO ASCII ESTEE EN DL
	MOV DL, BH
	ADD DL, 30H
	INT 21H

	MOV AH, 02H; NUEVAMENTE ENCONTRAMOS EESTA INSTRUCCION PERO SOLAMENTE ES PARA ASEGURARNOS
	MOV DL, BL
	ADD DL, 30H
	INT 21H
	
	;RESTA
	MOV AL, NUMERO1
	SUB AL, NUMERO2
	MOV RESULTADO, AL
	
	MOV AH, 09H
	LEA DX, MSG_RESTA
	INT 21H
	
	MOV AL, RESULTADO
	AAM
	MOV BX, AX
	MOV AH, 02H
	MOV DL, BH
	ADD DL, 30H
	INT 21H
	
	MOV AH, 02H
	MOV DL, BL
	ADD DL, 30H
	INT 21H
	
	;MULTIPLICACIOON
	MOV AL, NUMERO1
	MOV BL, NUMERO2
	MUL BL; MUL ASUME QUE VAS A MULTIPLICAR TU NUUMERO POR LO QUE HAYA EN AL
	MOV RESULTADO, AL; EL RESULTADO SOBREESCRIBE AL
	
	MOV AH, 09H
	LEA DX, MSG_MULT
	INT 21H
	
	MOV AL, RESULTADO
	AAM
	MOV BX, AX
	MOV AH, 02H
	MOV DL, BH
	ADD DL, 30H; SOSPECHOSO
	INT 21H
	
	MOV AH, 02H
	MOV DL, BL
	ADD DL, 30H
	INT 21H
	
	;DIVISIOON
	XOR AX, AX
	MOV AL, NUMERO1
	MOV BL, NUMERO2
	DIV BL
	MOV RESULTADO, AL
	
	MOV AH, 09H
	LEA DX, MSG_DIV
	INT 21H
	
	MOV AL, RESULTADO
	AAM
	MOV BX, AX
	MOV AH, 02H
	MOV DL, BH
	ADD DL, 30H
	INT 21H
	
	MOV AH, 02H
	MOV DL, BL
	ADD DL, 30H
	INT 21H

.EXIT

END
