
.MODEL SMALL
.STACK
.DATA
	
	X DB 0H
	Y DB 0H
	RESULTADO DB 0H
	
	MSG_SUMA DB 10, 13, 7, "SUMA: $"
	MSG_RESTA DB 10, 13, 7, "RESTA: $"
	MSG_MULT DB 10, 13, 7, "MULTIPLICACION: $"
	MSG_DIV DB 10, 13, 7, "DIVISION: $"
	MSG_RES DB 10, 13, 7, "RESULTADO: $"
	MSG_INGNUM DB 10, 13, 7, "INGRESE UN NUMERO: $"
	
.CODE
	
	CALL INIC
	
	LEA DX, MSG_INGNUM
	CALL IMPCAD
	CALL ESCCAR
	MOV X, AL
	
	LEA DX, MSG_INGNUM
	CALL IMPCAD
	CALL ESCCAR
	MOV Y, AL

	LEA DX, MSG_SUMA
	CALL IMPCAD
	CALL SUMA
	CALL IMPRESULT
	
	LEA DX, MSG_RESTA
	CALL IMPCAD
	CALL RESTA
	CALL IMPRESULT
	
	LEA DX, MSG_MULT
	CALL IMPCAD
	CALL MULTIPLICACION
	CALL IMPRESULT
	
	LEA DX, MSG_DIV
	CALL IMPCAD
	CALL DIVISION
	CALL IMPRESULT

.EXIT

	INIC PROC
		MOV AX, @DATA
		MOV DS, AX
		RET
	INIC ENDP

	SUMA PROC X, Y
		MOV AL, X
		ADD AL, Y
		MOV RESULTADO, AL
		RET
	SUMA ENDP
	
	RESTA PROC X, Y
		MOV AL, X
		SUB AL, Y
		MOV RESULTADO, AL
		RET
	RESTA ENDP
	
	MULTIPLICACION PROC X, Y
		MOV AL, X
		MOV BL, Y
		MUL BL
		MOV RESULTADO, AL
		RET
	MULTIPLICACION ENDP
	
	DIVISION PROC X, Y
		XOR AX, AX
		MOV AL, X
		MOV BL, Y
		DIV BL
		MOV RESULTADO, AL
		RET
	DIVISION ENDP
	
	IMPRESULT PROC
		MOV AL, RESULTADO
		AAM; ESTO CONVIERTE A BCD LO QUE TENGA EN AL Y LO PONE EN AX, EL DIGITO MAS SIGNIFICATIVO EN AH Y EL OTRO EN AL
		MOV BX, AX
		
		MOV AH, 02H; RECORDEMOS QUE ESTE SERVICIO IMPRIME UN CARACTER CUYO CODIGO ASCII ESTE EN DL
		MOV DL, BH
		ADD DL, 30H
		INT 21H

		MOV AH, 02H; NUEVAMENTE ENCONTRAMOS ESTA INSTRUCCION PERO SOLAMENTE ES PARA ASEGURARNOS
		MOV DL, BL
		ADD DL, 30H
		INT 21H
		
		RET
	IMPRESULT ENDP
	
	IMPCAD PROC
		MOV AH, 09H
		INT 21H
		RET
	IMPCAD ENDP
	
	ESCCAR PROC; CON ESTO PUEDES ESCANEAR UN CARACTER (UN NUMERO) OBTENER SU CODIGO ASCII, LUEGO RESTARLE 30H PARA QUE DE EL NUMERO QUE ESCRIBISTE Y QUE ASI PUEDAS REALIZAR OPERACIONES SOBRE EL
		MOV AH, 01H
		INT 21H
		SUB AL, 30H
		RET
	ESCCAR ENDP
END
